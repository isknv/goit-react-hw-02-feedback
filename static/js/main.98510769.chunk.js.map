{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/Main/Main.jsx","components/App/App.jsx","index.js"],"names":["Section","title","FeedbackOptions","leaveFeedback","options","map","option","onClick","name","Statistics","countTotalFeedback","countPositiveFeedbackPercentage","style","listStyle","good","neutral","bad","Notification","message","Main","state","event","target","setState","prev","parseInt","textAlign","this","Object","keys","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAiBeA,EAdC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACjB,OACE,mCACE,8BACE,6BAAKA,SCeEC,EAnBS,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,QACxC,OACE,mCACE,8BACGA,EAAQC,KAAI,SAAAC,GAAM,OACjB,wBAAQC,QAASJ,EAAeK,KAAMF,EAAtC,SACGA,GADgDA,WCqB9CG,EA3BI,SAAC,GAKb,IAJLR,EAII,EAJJA,MACAG,EAGI,EAHJA,QACAM,EAEI,EAFJA,mBACAC,EACI,EADJA,gCAEA,OACE,qCACE,6BAAKV,IACL,qBAAIW,MAAO,CAAEC,UAAW,QAAxB,UACE,wCAAWT,EAAQU,QACnB,2CAAcV,EAAQW,WACtB,uCAAUX,EAAQY,OAClB,yCAAYN,OACZ,qDAAwBC,IAAxB,cCPOM,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,6BAAKA,KCGtBC,E,4MACnBC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPb,cAAgB,SAAAkB,GACd,IAAMb,EAAOa,EAAMC,OAAOd,KAC1B,EAAKe,UAAS,SAAAC,GAAI,sBACfhB,EAAQgB,EAAKhB,IAAS,O,EAI3BE,mBAAqB,WACnB,OAAO,EAAKU,MAAMN,KAAO,EAAKM,MAAML,QAAU,EAAKK,MAAMJ,K,EAG3DL,gCAAkC,WAChC,OAAkC,IAA9B,EAAKD,qBACA,EAEFe,SAAU,EAAKL,MAAMN,KAAO,EAAKJ,qBAAwB,M,4CAGlE,WACE,OACE,mCACE,sBAAKE,MAAO,CAAEc,UAAW,UAAzB,UACE,cAAC,EAAD,CAASzB,MAAO,0BAChB,cAAC,EAAD,CACEE,cAAewB,KAAKxB,cACpBC,QAASwB,OAAOC,KAAKF,KAAKP,SAE3BO,KAAKjB,qBACJ,cAAC,EAAD,CACET,MAAO,aACPG,QAASuB,KAAKP,MACdV,mBAAoBiB,KAAKjB,mBACzBC,gCACEgB,KAAKhB,kCAIT,cAAC,EAAD,CAAcO,QAAQ,+B,GA5CAY,IAAMC,WCKzBC,EARH,WACV,OACE,mCACE,cAAC,EAAD,OCDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.98510769.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title }) => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1>{title}</h1>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ leaveFeedback, options }) => {\r\n  return (\r\n    <>\r\n      <div>\r\n        {options.map(option => (\r\n          <button onClick={leaveFeedback} name={option} key={option}>\r\n            {option}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  leaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({\r\n  title,\r\n  options,\r\n  countTotalFeedback,\r\n  countPositiveFeedbackPercentage,\r\n}) => {\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      <ul style={{ listStyle: \"none\" }}>\r\n        <li>Good: {options.good}</li>\r\n        <li>Neutral: {options.neutral}</li>\r\n        <li>Bad: {options.bad}</li>\r\n        <li>Total: {countTotalFeedback()}</li>\r\n        <li>Positive feedback: {countPositiveFeedbackPercentage()}%</li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  options: PropTypes.object.isRequired,\r\n  countTotalFeedback: PropTypes.func.isRequired,\r\n  countPositiveFeedbackPercentage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => <h3>{message}</h3>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport Section from \"../Section/Section\";\r\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\r\nimport Statistics from \"../Statistics/Statistics\";\r\nimport Notification from \"../Notification/Notification\";\r\n\r\nexport default class Main extends React.Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  leaveFeedback = event => {\r\n    const name = event.target.name;\r\n    this.setState(prev => ({\r\n      [name]: (prev[name] += 1),\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    return this.state.good + this.state.neutral + this.state.bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    if (this.countTotalFeedback() === 0) {\r\n      return 0;\r\n    }\r\n    return parseInt((this.state.good / this.countTotalFeedback()) * 100);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <Section title={\"Please leave feedback\"} />\r\n          <FeedbackOptions\r\n            leaveFeedback={this.leaveFeedback}\r\n            options={Object.keys(this.state)}\r\n          />\r\n          {this.countTotalFeedback() ? (\r\n            <Statistics\r\n              title={\"Statistics\"}\r\n              options={this.state}\r\n              countTotalFeedback={this.countTotalFeedback}\r\n              countPositiveFeedbackPercentage={\r\n                this.countPositiveFeedbackPercentage\r\n              }\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport Main from \"../../components/Main/Main\";\n\nconst App = () => {\n  return (\n    <>\n      <Main />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}